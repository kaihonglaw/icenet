param:

  #active:  [null]
  #active: ['xgb1']
  active: ['xgb1', 'cutset0']
  num_samples:    30 # Trial count parameter

setup:

  # -----------------------------------

  cutset_setup_0:
    search_algo: 'HyperOpt' # 'Basic' (use with grid_search), 'HyperOpt', 'Optuna', 'BayesOpt'

    search_metric:
      metric: 'loss'   # 'AUC' or 'loss'
      mode: 'max'      # 'max', 'min'
    
    param:
      
      cut_0:
        type: "tune.uniform(0.0, 20000)"
        #type: "tune.grid_search([0, 10, 100, 1000])"

      cut_1:
        type: "tune.uniform(0.0, 1.0)"
  
      cut_2:
        type: "tune.uniform(0.0, 0.1)"

      cut_3:
        type: "tune.uniform(0.0, 1.0)"

      cut_4:
        type: "tune.uniform(0.0, 200)"

      cut_5:
        type: "tune.randint(0, 10)"

      cut_6:
        type: "tune.randint(0, 5)"
  
  # -----------------------------------

  xgb_setup_0:
    search_algo: 'HyperOpt'

    search_metric:
      metric: 'AUC'   # 'AUC' or 'loss'
      mode: 'max'     # 'max', 'min'
    
    param:
      
      num_boost_round:
        type: "tune.randint(20, 120)"

      ## Tree parameters
      max_depth:
        type: "tune.choice([4,5,6,7,8,9,10,11,12,13,14,15,16,17])"

      ## Regularization
      reg_lambda: # Smoothness
        type: "tune.uniform(0.0, 5.0)"

      reg_alpha: # Sparsity
        type: "tune.uniform(0.0, 0.5)"

      ## Tree splitting
      #min_child_weight:
      #  type: "tune.uniform(0.1, 2.0)"  # Between [0, inf] Default 1.0
      
      gamma:
        type: "tune.uniform(0.0, 2.0)"   # Between [0,inf] Default 1.0
      
      #max_delta_step:
      #  type: "tune.uniform(0.0, 1.5)"  # Between [0, inf] Default 0

      #subsample:
      #  type: "tune.uniform(0.5, 1)"    # Between [0, 1] # Default 1

      colsample_bytree:
        type: "tune.uniform(0.3, 1.0)" # Between [0,1], default 1

      colsample_bylevel:
        type: "tune.uniform(0.3, 1.0)" # Between [0,1], default 1

      colsample_bynode:
        type: "tune.uniform(0.3, 1.0)" # Between [0,1], default 1

  
  # -----------------------------------

  xgb_setup_1:
    search_algo: 'HyperOpt'

    search_metric:
      metric: 'AUC'
      mode: 'max'

    param:
      
      ## Booster parameters
      num_boost_round:
        type: "tune.choice([10])"
      
      ## Tree parameters
      max_depth:
        type: "tune.choice([4,5,6,7,8,9,10,11,12,13,14,15,16,17])"

      ## Regularization
      reg_lambda: # Smoothness
        type: "tune.uniform(0.0, 5.0)"

      reg_alpha: # Sparsity
        type: "tune.uniform(0.0, 0.5)"

      ## Tree splitting # Between [0, inf], default 1.0
      #min_child_weight:
      #  type: "tune.uniform(0.1, 2.0)"
      
      gamma: # Between [0,inf], default 1.0
        type: "tune.uniform(0.0, 2.0)"
      
      #max_delta_step: # Between [0, inf], default 0
      #  type: "tune.uniform(0.0, 1.5)"

      #subsample: # Between [0, 1], default 1
      #  type: "tune.uniform(0.5, 1)"

      colsample_bytree: # Between [0,1], default 1
        type: "tune.uniform(0.3, 1.0)"

      colsample_bylevel: # Between [0,1], default 1
        type: "tune.uniform(0.3, 1.0)"

      colsample_bynode: # Between [0,1], default 1
        type: "tune.uniform(0.3, 1.0)"
